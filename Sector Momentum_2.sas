%let datadir =D:\Dropbox\SAS\Part_2_Yang;
libname moment "&datadir.\Data";
ods html gpath="&datadir.\graph" path="&datadir.\output" file="momentum.html" ;
ods pdf file="&datadir.\output\momentum.pdf" ;
*infile the matrix of raw data and the ranking data;
proc iml;
 reset print;
use moment.ranking;
read all var _all_ into rank;
use moment.raw;
read all var{xly xlp xle xlf xlv xli xlb xlk xlu spy rf} into a; 
print rank a;

*long top3, short last3, and hold for 1 month;
A1=j(nrow(rank)-9,6);
do q=1 to nrow(A1);
 do i=1 to 9;
  if rank[q,i]=9 then a1[q,1]=a[q+6,i];
   if rank[q,i]=8 then a1[q,2]=a[q+6,i];
    if rank[q,i]=7 then a1[q,3]=a[q+6,i];
	 if rank[q,i]=1 then a1[q,4]=-a[q+6,i];*short last 3;
	  if rank[q,i]=2 then a1[q,5]=-a[q+6,i];
	   if rank[q,i]=3 then a1[q,6]=-a[q+6,i];
	end;
end;
*Calculate the return of each month of the strategy;
ave_a1=j(nrow(a1),1);
do i=1 to nrow(a1);
 ave_a1[i,1]=a1[i,+]/6;
end;

*in June/December, long top 3, short last 3, and hold for 6 months;
J_D=j(nrow(rank)-9,6);
do m=1 to nrow(J_D) by 6;
 do g=m to m+5;
  do n=1 to 9;
  if rank[m,n]=9 then J_D[g,1]=a[g+6,n];
   if rank[m,n]=8 then J_D[g,2]=a[g+6,n];
    if rank[m,n]=7 then J_D[g,3]=a[g+6,n];
	 if rank[m,n]=1 then J_D[g,4]=-a[g+6,n];*short last 3;
	  if rank[m,n]=2 then J_D[g,5]=-a[g+6,n];
	   if rank[m,n]=3 then J_D[g,6]=-a[g+6,n];
   end;
  end;
end;
*Calculate the return of each month of the strategy;
ave_b1=j(nrow(J_D),1);
do i=1 to nrow(J_D);
 ave_b1[i,1]=J_D[i,+]/6;
end;

*in July/January, long top 3, short last 3, and hold for 6 months;
J_J=j(nrow(rank)-9,6);
do m=2 to nrow(J_J) by 6;
 do g=m to m+5;
  do n=1 to 9;
  if rank[m,n]=9 then J_J[g,1]=a[g+6,n];
   if rank[m,n]=8 then J_J[g,2]=a[g+6,n];
    if rank[m,n]=7 then J_J[g,3]=a[g+6,n];
	 if rank[m,n]=1 then J_J[g,4]=-a[g+6,n];*short last 3;
	  if rank[m,n]=2 then J_J[g,5]=-a[g+6,n];
	   if rank[m,n]=3 then J_J[g,6]=-a[g+6,n];
   end;
  end;
end;
*Calculate the return of each month of the strategy;
ave_b2=j(nrow(J_J),1);
do i=1 to nrow(J_J);
 ave_b2[i,1]=J_J[i,+]/6;
end;
*in August/February, long top 3, short last 3, and hold for 6 months;
A_F=j(nrow(rank)-9,6);
do m=3 to nrow(A_F) by 6;
 do g=m to m+5;
  do n=1 to 9;
  if rank[m,n]=9 then A_F[g,1]=a[g+6,n];
   if rank[m,n]=8 then A_F[g,2]=a[g+6,n];
    if rank[m,n]=7 then A_F[g,3]=a[g+6,n];
	 if rank[m,n]=1 then A_F[g,4]=-a[g+6,n];*short last 3;
	  if rank[m,n]=2 then A_F[g,5]=-a[g+6,n];
	   if rank[m,n]=3 then A_F[g,6]=-a[g+6,n];
   end;
  end;
end;
*Calculate the return of each month of the strategy;
ave_b3=j(nrow(A_F),1);
do i=1 to nrow(A_F);
 ave_b3[i,1]=A_F[i,+]/6;
end;
*in September/March, long top 3, short last 3, and hold for 6 months;
S_M=j(nrow(rank)-9,6);
do m=4 to nrow(S_M) by 6;
 do g=m to m+5;
  do n=1 to 9;
  if rank[m,n]=9 then S_M[g,1]=a[g+6,n];
   if rank[m,n]=8 then S_M[g,2]=a[g+6,n];
    if rank[m,n]=7 then S_M[g,3]=a[g+6,n];
	 if rank[m,n]=1 then S_M[g,4]=-a[g+6,n];*short last 3;
	  if rank[m,n]=2 then S_M[g,5]=-a[g+6,n];
	   if rank[m,n]=3 then S_M[g,6]=-a[g+6,n];
   end;
  end;
end;
*Calculate the return of each month of the strategy;
ave_b4=j(nrow(S_M),1);
do i=1 to nrow(S_M);
 ave_b4[i,1]=S_M[i,+]/6;
end;
*in October/April, long top 3, short last 3, and hold for 6 months;
O_A=j(nrow(rank)-9,6);
do m=5 to nrow(O_A) by 6;
 do g=m to m+5;
  do n=1 to 9;
  if rank[m,n]=9 then O_A[g,1]=a[g+6,n];
   if rank[m,n]=8 then O_A[g,2]=a[g+6,n];
    if rank[m,n]=7 then O_A[g,3]=a[g+6,n];
	 if rank[m,n]=1 then O_A[g,4]=-a[g+6,n];*short last 3;
	  if rank[m,n]=2 then O_A[g,5]=-a[g+6,n];
	   if rank[m,n]=3 then O_A[g,6]=-a[g+6,n];
   end;
  end;
end;
*Calculate the return of each month of the strategy;
ave_b5=j(nrow(O_A),1);
do i=1 to nrow(O_A);
 ave_b5[i,1]=O_A[i,+]/6;
end;
*in November/May, long top 3, short last 3, and hold for 6 months;
N_M=j(nrow(rank)-9,6);
do m=6 to nrow(N_M) by 6;
 do g=m to m+5;
  do n=1 to 9;
  if rank[m,n]=9 then N_M[g,1]=a[g+6,n];
   if rank[m,n]=8 then N_M[g,2]=a[g+6,n];
    if rank[m,n]=7 then N_M[g,3]=a[g+6,n];
	 if rank[m,n]=1 then N_M[g,4]=-a[g+6,n];*short last 3;
	  if rank[m,n]=2 then N_M[g,5]=-a[g+6,n];
	   if rank[m,n]=3 then N_M[g,6]=-a[g+6,n];
   end;
  end;
end;
*Calculate the return of each month of the strategy;
ave_b6=j(nrow(N_M),1);
do i=1 to nrow(N_M);
 ave_b6[i,1]=N_M[i,+]/6;
end;

create moment.output_B6 from N_M;
append from N_M;
create moment.Average_B6 from ave_b6;
append from ave_b6;

create moment.output_A from a1;
append from a1;
create moment.Average_A from ave_a1;
append from ave_a1;

create moment.output_B1 from J_D;
append from J_D;
create moment.Average_B1 from ave_b1;
append from ave_b1;

create moment.output_B2 from J_J;
append from J_J;
create moment.Average_B2 from ave_b2;
append from ave_b2;

create moment.output_B3 from A_F;
append from A_F;
create moment.Average_B3 from ave_b3;
append from ave_b3;

create moment.output_B4 from S_M;
append from S_M;
create moment.Average_B4 from ave_b4;
append from ave_b4;

create moment.output_B5 from O_A;
append from O_A;
create moment.Average_B5 from ave_b5;
append from ave_b5;

create moment.output_B6 from N_M;
append from N_M;
create moment.Average_B6 from ave_b6;
append from ave_b6;


quit;
